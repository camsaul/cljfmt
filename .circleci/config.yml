version: 2.1
orbs:
  win: circleci/windows@5.1.0
  macos: circleci/macos@2.5.4
jobs:
  uberjar:
     docker:
      - image: cimg/clojure:1.11.1-openjdk-17.0
     working_directory: ~/repo
     steps:
      - checkout
      - restore_cache:
          keys:
            - uberjar-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Build uberjar
          working_directory: ~/repo/cljfmt
          command: lein uberjar
      - persist_to_workspace:
          root: cljfmt/target
          paths:
            - cljfmt-*-standalone.jar
      - save_cache:
          paths:
            - ~/.m2
          key: uberjar-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
  linux_amd64:
    docker:
      - image: cimg/clojure:1.11.1-openjdk-17.0
    working_directory: ~/repo
    environment:
      GRAALVM_HOME: /home/circleci/graalvm-ce-java17-22.3.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - linux-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
      - run:
          name: Install musl for static linking
          command: sudo bash .circleci/script/setup-musl.sh
      - run:
          name: Download GraalVM
          working_directory: ~/
          command: |
            if ! [ -d graalvm-ce-java17-22.3.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.2/graalvm-ce-java17-linux-amd64-22.3.2.tar.gz
              tar -xzf graalvm-ce-java17-linux-amd64-22.3.2.tar.gz
            fi
      - run:
          name: Install GraalVM native-image
          working_directory: ~/graalvm-ce-java17-22.3.2
          command: bin/gu install native-image
      - run:
          name: Compile native image
          working_directory: ~/repo/cljfmt
          command: lein native-image
      - run:
          name: Compile static native image
          working_directory: ~/repo/cljfmt
          command: lein with-profile +static native-image
      - run:
          name: Create artifacts
          working_directory: ~/repo/cljfmt/target
          command: |
            tar -czf cljfmt-${CIRCLE_TAG}-linux-amd64.tar.gz cljfmt
            mv cljfmt cljfmt-dynamic
            mv cljfmt-static cljfmt
            tar -czf cljfmt-${CIRCLE_TAG}-linux-amd64-static.tar.gz cljfmt
      - persist_to_workspace:
          root: cljfmt/target
          paths:
            - cljfmt-*.tar.gz
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java17-22.3.2
          key: linux-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
  linux_aarch64:
    machine:
      enabled: true
      image: ubuntu-2204:2023.07.1
    resource_class: arm.medium
    working_directory: ~/repo
    environment:
      GRAALVM_HOME: /home/circleci/graalvm-ce-java17-22.3.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - linux-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Download Leiningen
          working_directory: ~/
          command: |
            wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
            chmod +x lein
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
      - run:
          name: Download GraalVM
          working_directory: ~/
          command: |
            if ! [ -d graalvm-ce-java17-22.3.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.2/graalvm-ce-java17-linux-aarch64-22.3.2.tar.gz
              tar xzf graalvm-ce-java17-linux-aarch64-22.3.2.tar.gz
            fi
      - run:
          name: Install GraalVM native-image
          working_directory: ~/graalvm-ce-java17-22.3.2
          command: bin/gu install native-image
      - run:
          name: Compile native image
          working_directory: ~/repo/cljfmt
          command: ~/lein native-image
      - run:
          name: Create artifact
          working_directory: ~/repo/cljfmt/target
          command: tar -czf cljfmt-${CIRCLE_TAG}-linux-aarch64.tar.gz cljfmt
      - persist_to_workspace:
          root: cljfmt/target
          paths:
            - cljfmt-*.tar.gz
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java17-22.3.2
          key: linux-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
  macos_amd64:
    macos:
      xcode: 14.2.0
    resource_class: macos.m1.medium.gen1
    working_directory: ~/repo
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java17-22.3.2/Contents/Home
    steps:
      - macos/install-rosetta
      - checkout
      - restore_cache:
          keys:
            - macos-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Download Leiningen
          working_directory: ~/
          command: |
            curl -O -sL https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
            chmod +x lein
      - run:
          name: Download GraalVM
          working_directory: ~/
          command: |
            if ! [ -d graalvm-ce-java17-22.3.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.2/graalvm-ce-java17-darwin-amd64-22.3.2.tar.gz
              tar xzf graalvm-ce-java17-darwin-amd64-22.3.2.tar.gz
            fi
      - run:
          name: Install GraalVM native-image
          working_directory: ~/graalvm-ce-java17-22.3.2/Contents/Home
          command: bin/gu install native-image
      - run:
          name: Compile native image
          working_directory: ~/repo/cljfmt
          command: ~/lein native-image
      - run:
          name: Create artifact
          working_directory: ~/repo/cljfmt/target
          command: tar -czf cljfmt-${CIRCLE_TAG}-darwin-amd64.tar.gz cljfmt
      - persist_to_workspace:
          root: cljfmt/target
          paths:
            - cljfmt-*.tar.gz
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java17-22.3.2
          key: macos-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
  macos_aarch64:
    macos:
      xcode: 14.2.0
    resource_class: macos.m1.large.gen1
    working_directory: ~/repo
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java17-22.3.1/Contents/Home
    steps:
      - checkout
      - restore_cache:
          keys:
            - macos-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Download Leiningen
          working_directory: ~/
          command: |
            curl -O -sL https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
            chmod +x lein
      - run:
          name: Download GraalVM
          working_directory: ~/
          command: |
            if ! [ -d graalvm-ce-java17-22.3.1 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.1/graalvm-ce-java17-darwin-aarch64-22.3.1.tar.gz
              tar xzf graalvm-ce-java17-darwin-aarch64-22.3.1.tar.gz
            fi
      - run:
          name: Install GraalVM native-image
          working_directory: ~/graalvm-ce-java17-22.3.1/Contents/Home
          command: bin/gu install native-image
      - run:
          name: Compile native image
          working_directory: ~/repo/cljfmt
          command: ~/lein native-image
      - run:
          name: Create artifact
          working_directory: ~/repo/cljfmt/target
          command: tar -czf cljfmt-${CIRCLE_TAG}-darwin-aarch64.tar.gz cljfmt
      - persist_to_workspace:
          root: cljfmt/target
          paths:
            - cljfmt-*.tar.gz
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java17-22.3.1
          key: macos-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
  windows:
    executor:
      name: win/default
      shell: cmd.exe
    steps:
      - checkout
      - restore_cache:
          keys:
            - win-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Download Leiningen
          shell: powershell.exe
          command: |
            (New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein.bat', 'lein.bat')
      - run:
          name: Install Leiningen
          command: .\lein self-install
      - run:
          name: Download GraalVM
          shell: powershell.exe
          command: |
            if (Test-Path('graalvm')) {
              return
            } else {
              (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.2/graalvm-ce-java17-windows-amd64-22.3.2.zip', 'graalvm.zip')
              Expand-Archive graalvm.zip graalvm
            }
      - run:
          name: Install GraalVM native image
          working_directory: graalvm/graalvm-ce-java17-22.3.2
          command: bin\gu install native-image
      - run:
          name: Compile native image
          working_directory: cljfmt
          command: ..\.circleci\script\compile.bat
      - run:
          name: Create artifact
          shell: powershell.exe
          working_directory: cljfmt/target
          command: |
            Compress-Archive cljfmt.exe ("cljfmt-{0}-win-amd64.zip" -f $env:CIRCLE_TAG)
      - persist_to_workspace:
          root: cljfmt/target
          paths:
            - cljfmt-*.zip
      - save_cache:
          paths:
            - .m2
            - graalvm
          key: win-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
  publish_release:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: Create SHA256 hashes
          working_directory: artifacts
          command: |
            for f in cljfmt-*; do
              sha256sum $f | awk '{print $1'} > $f.sha256
            done
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./artifacts/
workflows:
  version: 2
  compile_and_release:
    jobs:
      - uberjar:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+$/
      - linux_amd64:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+$/
      - linux_aarch64:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+$/
      - macos_amd64:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+$/
      - macos_aarch64:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+$/
      - windows:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+$/
      - publish_release:
          requires:
            - uberjar
            - linux_amd64
            - linux_aarch64
            - macos_amd64
            - macos_aarch64
            - windows
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+$/
